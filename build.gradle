buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
}

plugins {
    id 'java'
    id 'jacoco'
    id 'idea'
    id 'io.freefair.lombok' version '5.3.0' apply false
    id 'io.ebean' version '12.6.2' apply false
    id 'com.github.johnrengelman.shadow' version '6.1.0' apply false
}

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'jacoco'
    apply plugin: 'idea'
    apply plugin: 'io.freefair.lombok'
    apply plugin: 'io.ebean'
    apply plugin: 'com.github.johnrengelman.shadow'

    apply from: "$rootDir/gradle/jacoco.gradle"
    apply from: "$rootDir/gradle/publish.gradle"

    if (project.hasProperty("local_script")) {
        apply from: file(local_script + "/build.local.gradle")
    }

    sourceCompatibility = 11
    targetCompatibility = 11

    ext {
        mcVersion = project.property("mcVersion")
    }

    group project.property("group")

    compileJava {
        options.encoding = 'UTF-8'
        options.compilerArgs += ["-parameters"]
        options.fork = true
        options.forkOptions.executable = 'javac'
    }

    archivesBaseName = project.property("pluginName")

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven { url = 'https://jitpack.io' }
        maven { url = "https://repo.aikar.co/content/groups/aikar/" }
        maven { url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
        maven { url = 'https://oss.sonatype.org/content/repositories/snapshots/' }
    }

    dependencies {
        implementation "org.spigotmc:spigot-api:${mcVersion}-R0.1-SNAPSHOT"
        implementation "com.github.MilkBowl:VaultAPI:1.7"
    }

    shadowJar {
        classifier = ''
        dependencies {
            include(dependency('co.aikar:acf-paper:'))
            include(dependency('net.silthus.configlib:configlib-bukkit:'))
            include(dependency('net.kyori::'))
        }
        relocate 'co.aikar.commands', "shadow.${pluginName}.acf"
        relocate 'co.aikar.locales', "shadow.${pluginName}.locales"
        relocate 'de.exlll.configlib', "shadow.${pluginName}.configlib"
        relocate 'net.kyori.adventure', "shadow.${pluginName}.adventure"
    }

    tasks.build.dependsOn(shadowJar)
    tasks.publish.dependsOn(shadowJar)

    test {
        useJUnitPlatform()
        testLogging {
            events "passed", "skipped", "failed"
        }
        ignoreFailures = false
    }

    processResources {
        project.properties.put("version", this.version)
        expand project.properties
    }

    defaultTasks 'build'
}
